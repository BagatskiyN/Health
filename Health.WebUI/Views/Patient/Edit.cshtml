@model Health.Domain.Entities.Patient
@using System.Web.Optimization

@{
    Layout = null;

}
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <link href="~/Content/Site.css" rel="stylesheet" type="text/css" />

    <link href="~/Content/Styles/MainLeftMenuStyle.css" rel="stylesheet" type="text/css" />
    <link href="~/Content/Styles/main.css" rel="stylesheet" type="text/css" />
    <link href="~/Content/bootstrap.css" rel="stylesheet" />
    <link href="~/Content/bootstrap-theme.css" rel="stylesheet" />

    <link href="~/Content/EditError.css" rel="stylesheet" />
</head>

<body>
    <p class="HealthTextLogo">HEALTH</p>
    <div class="HalfOfScreen LeftSideOfScreen">
        <div class="EnterNavigationBar"></div>

    </div>
    <div class="AuthorizationSection RegisterSection">
        <h1 class="AuthorizationBlockHeadText"> Редактирование</h1>

        @using (Html.BeginForm("Edit", "Patient",
        FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.ValidationSummary()
            <div class="block_ChangeImage form-group">
                <p class="block_text_photo">Фото</p><br />
                @Html.HiddenFor(x => x.Id)

                @if (Model.ImageData == null || Model.ImageMimeType == null)
                {
                    <img class="img-thumbnail block_EditedImage" id="image"
                         src="~/Content/icons/svgIcons/UserHaveNoPhoto.svg" />
                }
                else
                {
                    <img class="img-thumbnail block_EditedImage" name="image" id="image"
                         src="@Url.Action("GetPatientPhoto", "Image",
                       new { id =Model.Id })" />
                }
                <div>

                    <input type='file' name="imageInp" onchange="readURL(this);" /><br />


                    <span class='label label-info' id="upload-file-info"></span><br />
                </div>
            </div>
            @*@Html.EditorForModel(new { htmlAttributes = new { @class = "TextInputLogin" } })*@

    <div class="AuthorizationFlexContainer">
        <p class="AuthorizationInputHelper">Фамилия</p>
        <div class="AuthorizationInputGroup AuthorizationFlexInputGroup">
            @Html.TextBox("Surname", Model.Surname, new { @class = "TextInputLogin" })

            <span class="bar"></span>
        </div>
        <p class="AuthorizationInputHelper">Имя</p>
        <div class="AuthorizationInputGroup AuthorizationFlexInputGroup">
            @Html.TextBox("Name", Model.Name, new { @class = "TextInputLogin" })

            <span class="bar"></span>
        </div>
        <p class="AuthorizationInputHelper">Отчество</p>
        <div class="AuthorizationInputGroup AuthorizationFlexInputGroup">
            @Html.TextBox("Patronymic", Model.Patronymic, new { @class = "TextInputLogin" })

            <span class="bar"></span>
        </div>
        <p class="AuthorizationInputHelper">Вес</p>
        <div class="AuthorizationInputGroup AuthorizationFlexInputGroup">
            @Html.TextBox("PatientWeight", Model.PatientWeight, new { @class = "TextInputLogin" })
            <span class="bar"></span>
        </div>
        <p class="AuthorizationInputHelper">Рост</p>
        <div class="AuthorizationInputGroup AuthorizationFlexInputGroup">
            @Html.TextBox("PatientHeight", Model.PatientHeight, new { @class = "TextInputLogin" })
            <span class="bar"></span>
        </div>
        <p class="AuthorizationInputHelper">Дата рождения</p>
        <div class="AuthorizationInputGroup AuthorizationFlexInputGroup">
            @Html.TextBox("PatientBirthdate", Model.PatientBirthdate, "{0:dd.MM.yyyy}", new { @class = "TextInputLogin" })
            <span class="bar"></span>
        </div>
        <p class="AuthorizationInputHelper">Группа крови</p>
        <div class="AuthorizationInputGroup AuthorizationFlexInputGroup">

            @Html.DropDownListFor(m => m.BloodTypeId, new SelectList(ViewBag.BloodTypes, "BloodTypeId", "BloodTypeTitle", Model.BloodTypeId), new { @id = "BloodType", @class = "TextInputLogin" })
            <span class="bar"></span>
        </div> 
        <p class="AuthorizationInputHelper">Пол</p>
        <div class="AuthorizationInputGroup AuthorizationFlexInputGroup">

            @Html.DropDownListFor(m => m.GenderId, new SelectList(ViewBag.Genders, "GenderId", "GenderTitle", Model.GenderId), new { @id = "Gender", @class = "TextInputLogin" })
            <span class="bar"></span>
        </div>
    </div>
        <input type="submit" value="Сохранить" class="ButtonInput ButtonInputRegister button_MouseOn" />
        <div class="ToRegisterRef">
            @Html.ActionLink("Отменить изменения", "Index")
        </div>
        }

    </div>
    @Scripts.Render("~/bundles/jquery")

    <script type="text/javascript">

        function readURL(input) {

            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#image')
                        .attr('src', e.target.result)

                };

                reader.readAsDataURL(input.files[0]);
            }
        }

    </script>
</body>
